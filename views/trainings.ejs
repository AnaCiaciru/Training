<% include partials/header %>

<h1 align="center">Types Of Training</h1>

<div id="container">
</div>

<script>

    function comp(tr1, tr2){
        if(tr1.marked > tr2.marked)
            return -1;
        else
            if(tr1.marked < tr2.marked)
                return 1;
        return 0;
    }

    function init(){
        let trainings_obj = [
            {
                name: "Teamwork",
                text: "Atunci când te-ai hotărât să construiești o echipă, trebuie să fii conștient de etapele de\n        dezvoltare a unei echipe. Sărind una dintre trepte, mai târziu se vor simți reperscusiunile. Trebuie\n        să înțelegi că aceste etape sunt normale și duc într-o direcție clară, anume formarea echipelor\n        performante!\n        Echipa = un grup al căror membri se influențează între ei pentru îndeplinirea unui\n        obiectiv al unei organizații SAU un grup de două sau mai multe persoane care interacționează și\n        cooperează într-un mod coordonat, unite între ele de intenția atingerii unui obiectiv comun.",
                marked: 0
            },
            {
                name: "Comunicare",
                text: "Informația este transmisă printr-o diversitate de semen legate direct de poziția corpului (postură),\ngestică, mimică, mișcări ale ochilor (privire), roșeață, vestimentație (accesorii, haine, bijuterii) etc.\nEste modul în care este primit un mesaj.\nEste important să ținem cont de limbajul nostru corporal atunci când vorbim cu oamenii. Trebuie să fim\ndeschiși și relaxați, păstrând un contact vizual bun. Multe dintre abilitățile pe care le folosim trebuie\naplicate într-un cadru mai larg, astfel că trebuie să avem:",
                marked: 0
            },
            {
                name: "Motivare si incredere",
                text: "Motivarea este procesul prin intermediul căruia cineva din exterior reușește să ajute o\naltă persoană să atingă anumite performanțe prin intermediul unor stimulenți.\nSpre exemplu, în cadrul unei companii, angajatul poate fi motivat de un venit mai mare,\ntichete/bonuri de masă, concedii, promovări, asigurarea de servicii medicale și sociale\navantajoase, program de muncă flexibil, automobile, gadgeturi, reduceri la produsele firmei,\nsubvenții (pentru transport, activități sportive), mese.",
                marked: 0
            },
            {
                name: "Time management",
                text: "Acțiunile omului sunt împărțite în funcție de prioritate și urgență și trebuie stabilită o ordine\nîn funcție de :\na. Ce vrem să obținem?\nb. Ce avem nevoie să obținem?\nc. Cât timp avem?\nPentru obiectivele pe termen lung (obiective de viață și obiective de 10 ani) etichetați lista de\nobiective cu litere de la A la F sau de la A la C, (se pot folosi și cifre) „A” cu etichetarea celor\nmai înalte priorități. După ce ai prioritizat obiectivele, scrie din nou lista în ordinea\npriorităților.",
                marked: 0
            },
            {
                name: "Human resources",
                text: "Acest training trebuie adaptat in functie de fiecare asociatie si de nevoile participantilor.\nUnele proiecte menționate ca fiind specifice HR-ului, nu se regăsesc în toate asociațiile sau nu sunt\nspecifice (doar) HR-ului. De aceea, este important sa cunoastem dinainte de training anumite detalii\ndespre asociatie sau macar sa le aflam in timpul trainingului (de la participanti).",
                marked: 0
            },
            {
                name: "Educatie financiara",
                text: "Pentru a folosi in mod eficient banii nostrii trebuie sa facem diferenta dintre Nevoie si\nDorinta. Cea din urma este cea care trebuie constientizata si sacrificata pentru a indeplini-o pe\ncea dintai. Mica discutie pe baza acestui subiect despre dorinta vs nevoie. De ce este important\nsa le indentificam si sa le tratam ca atare.",
                marked: 0
            }
        ]

        let trainingsJSON = JSON.stringify(trainings_obj);
        window.localStorage.setItem("trainings", trainingsJSON);
    }

    if(!window.localStorage.trainings){
        init();
    }

    window.onload = function(){
        let trainings_txt = window.localStorage.getItem("trainings");
        let trainings = JSON.parse(trainings_txt);

        // puteam sa creez direct sectiunea si sa le adaug folosind id-urile
        for(let i = 0; i < 6; i++){
            let section = document.createElement("SECTION");
            section.id = i.toString()

            // titlul sectiunii
            let title = document.createElement("H2");
            let txt = document.createTextNode(trainings[i].name);
            title.appendChild(txt);
            section.appendChild(title);

            // continutul
            let content = document.createElement("P");
            txt = document.createTextNode(trainings[i].text);
            content.appendChild(txt);
            section.appendChild(content);

            // butonul ptr marcat
            let button = document.createElement("button");

            if(trainings[i].marked === 0){
                section.className = "unmarked";
                txt = document.createTextNode("Important");
            }
            else{
                section.className = "marked";
                txt = document.createTextNode("Unimportant");
            }

            button.appendChild(txt);

            let trainingsJSON

            button.onclick = function() {

                let index = parseInt(section.id);

                if(section.className === "marked"){
                    section.className = "unmarked";
                    button.textContent = "Important";
                    trainings[index].marked = 0;
                }
                else{
                    section.className = "marked";
                    button.textContent = "Unimportant";
                    trainings[index].marked = 1;
                }

                trainings.sort(comp);
                trainingsJSON = JSON.stringify(trainings);

                window.localStorage.clear();
                window.localStorage.setItem("trainings", trainingsJSON);
                console.log(trainings);
            }

            section.appendChild(button);
            document.getElementById("container").appendChild(section);
        }
    }

</script>

<% include partials/footer %>